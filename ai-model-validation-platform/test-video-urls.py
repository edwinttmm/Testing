#!/usr/bin/env python3
"""
Test script to verify that video URLs are properly generated by the backend API.
"""
import requests
import sys

def test_video_urls():
    """Test that videos have proper absolute URLs"""
    
    base_url = "http://155.138.239.131:8000"
    
    print("🧪 Testing Video URL Generation Fix...")
    print(f"Backend API: {base_url}")
    
    try:
        # Test 1: Get all videos
        print("\n📊 Testing /api/videos endpoint...")
        response = requests.get(f"{base_url}/api/videos")
        
        if response.status_code != 200:
            print(f"❌ Failed to get videos: {response.status_code}")
            return False
            
        data = response.json()
        videos = data.get("videos", [])
        
        if not videos:
            print("⚠️  No videos found to test")
            return True
            
        print(f"✅ Found {len(videos)} videos")
        
        # Check first video for URL structure
        video = videos[0]
        video_url = video.get("url")
        
        if not video_url:
            print(f"❌ Video {video.get('id')} is missing URL field")
            return False
            
        if not video_url.startswith("http"):
            print(f"❌ Video URL is not absolute: {video_url}")
            return False
            
        if base_url not in video_url:
            print(f"❌ Video URL doesn't contain base URL: {video_url}")
            return False
            
        print(f"✅ Video URL looks correct: {video_url}")
        
        # Test that the URL is accessible
        print(f"\n🔗 Testing video URL accessibility...")
        try:
            head_response = requests.head(video_url, timeout=5)
            if head_response.status_code == 200:
                print(f"✅ Video URL is accessible")
            else:
                print(f"⚠️  Video URL returned status {head_response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"⚠️  Could not test video URL accessibility: {e}")
        
        return True
        
    except requests.exceptions.RequestException as e:
        print(f"❌ Connection error: {e}")
        return False
    except Exception as e:
        print(f"❌ Unexpected error: {e}")
        return False

if __name__ == "__main__":
    success = test_video_urls()
    if success:
        print("\n🎉 Video URL test completed successfully!")
        sys.exit(0)
    else:
        print("\n💥 Video URL test failed!")
        sys.exit(1)