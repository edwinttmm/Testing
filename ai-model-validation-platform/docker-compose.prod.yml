version: '3.8'

# Production overrides for docker-compose.yml
services:
  postgres:
    restart: always
    environment:
      # Production database settings
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_LOG_STATEMENT=all
      - POSTGRES_LOG_MIN_DURATION_STATEMENT=1000
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.7
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  redis:
    restart: always
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD:-secure_redis_password}
      --appendonly yes
      --appendfsync everysec
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  backend:
    restart: always
    environment:
      # Production-specific environment variables
      - AIVALIDATION_APP_ENVIRONMENT=production
      - UVICORN_WORKERS=4
      - UVICORN_WORKER_TIMEOUT=300
      - LOG_LEVEL=WARNING
    command: >
      /app/scripts/wait-for-services.sh 
      uvicorn main:socketio_app 
      --host 0.0.0.0 
      --port 8000 
      --workers 4
      --worker-class uvicorn.workers.UvicornWorker
      --access-log
      --log-level warning
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 60s

  frontend:
    restart: always
    environment:
      - NODE_ENV=production
      - GENERATE_SOURCEMAP=false
      - REACT_APP_DEBUG=false
      - REACT_APP_LOG_LEVEL=error
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 60s

  # Production CVAT configuration
  cvat_db:
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  cvat:
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G