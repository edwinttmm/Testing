# Prometheus Configuration for AI Model Validation Platform
# Production monitoring configuration optimized for Vultr deployment

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    environment: 'vultr-production'
    cluster: 'ai-validation'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alert_rules.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Node Exporter (system metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metrics_path: /metrics

  # Docker Engine metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['host.docker.internal:9323']
    scrape_interval: 30s
    metrics_path: /metrics

  # PostgreSQL metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics
    params:
      collect[]:
        - pg_stat_database
        - pg_stat_user_tables
        - pg_stat_activity

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics

  # FastAPI Backend metrics
  - job_name: 'backend'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 15s
    metrics_path: /metrics
    params:
      format: ['prometheus']

  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:9113']
    scrape_interval: 30s
    metrics_path: /metrics

  # Frontend metrics (if available)
  - job_name: 'frontend'
    static_configs:
      - targets: ['frontend:3000']
    scrape_interval: 60s
    metrics_path: /metrics
    # Only scrape if metrics endpoint is available
    honor_labels: true

  # CVAT metrics
  - job_name: 'cvat'
    static_configs:
      - targets: ['cvat:8080']
    scrape_interval: 60s
    metrics_path: /api/server/analytics/performance/reports
    # Custom headers for CVAT authentication
    params:
      format: ['prometheus']

  # Blackbox exporter for external monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://155.138.239.131/health
        - https://155.138.239.131/health
        - http://155.138.239.131/api/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # SSL certificate monitoring
  - job_name: 'blackbox-ssl'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://155.138.239.131:443
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Custom application metrics
  - job_name: 'ai-validation-metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 30s
    metrics_path: /api/metrics/prometheus
    params:
      format: ['prometheus']
    # Custom labels for application metrics
    relabel_configs:
      - target_label: service
        replacement: 'ai-validation'
      - target_label: environment
        replacement: 'production'

# Remote write configuration (for external monitoring services)
# remote_write:
#   - url: "https://prometheus-prod-10-prod-us-central-0.grafana.net/api/prom/push"
#     basic_auth:
#       username: "your-prometheus-username"
#       password: "your-grafana-cloud-api-key"

# Storage configuration
storage:
  tsdb:
    retention.time: 15d
    retention.size: 10GB
    path: /prometheus
    wal-compression: true

# Performance tuning
query:
  max_concurrency: 20
  timeout: 2m
  max_samples: 50000000

# Web configuration
web:
  max_connections: 512
  read_timeout: 30s
  enable_lifecycle: true
  enable_admin_api: true
  page_title: "AI Validation Platform - Prometheus"
  external_url: "https://155.138.239.131/prometheus/"

# Security configuration
# Note: In production, consider adding authentication
# basic_auth_users:
#   admin: $2b$12$hNf2lSsxfm0.i4a.1kVpSOVyBCfIB51VRjgBUyv6kdnyTlgWj81Ay  # bcrypt hash of password