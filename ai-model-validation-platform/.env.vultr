# VRU Validation Platform - Vultr Production Environment
# External IP: 155.138.239.131

# ==============================================
# DOMAIN AND SSL CONFIGURATION
# ==============================================
DOMAIN_NAME=your-domain.com
# Alternative: Use IP directly if no domain: DOMAIN_NAME=155.138.239.131
VULTR_EXTERNAL_IP=155.138.239.131
SSL_EMAIL=admin@your-domain.com

# ==============================================
# DATABASE CONFIGURATION - PRODUCTION
# ==============================================
POSTGRES_DB=vru_validation_prod
POSTGRES_USER=vru_admin
# CRITICAL: Generate a strong password
POSTGRES_PASSWORD=VultrProd2024!SecureDBPass#789$
POSTGRES_MAX_CONNECTIONS=200

# ==============================================
# REDIS CONFIGURATION - PRODUCTION
# ==============================================
# CRITICAL: Generate a strong password
REDIS_PASSWORD=VultrRedis2024!CacheSecure#456$

# ==============================================
# APPLICATION SECURITY - PRODUCTION
# ==============================================
# CRITICAL: Generate a secure 64-character secret key
AIVALIDATION_SECRET_KEY=VultrSecretKey2024!ProductionAIValidation#SuperSecure789$AbCdEf
APP_ENV=production

# ==============================================
# CVAT DATABASE CONFIGURATION
# ==============================================
# CRITICAL: Generate a strong password
CVAT_POSTGRES_PASSWORD=CVATVultr2024!AnnotationDB#123$

# ==============================================
# MONITORING AND GRAFANA
# ==============================================
# CRITICAL: Set a strong Grafana admin password
GRAFANA_PASSWORD=GrafanaVultr2024!MonitorDash#456$

# ==============================================
# HOST CONFIGURATION - VULTR PRODUCTION
# ==============================================
# External access configuration
DATABASE_HOST=155.138.239.131
REDIS_HOST=155.138.239.131
BACKEND_HOST=155.138.239.131
FRONTEND_HOST=155.138.239.131
CVAT_HOST=155.138.239.131

# Internal Docker network (keep localhost for internal container communication)
INTERNAL_DATABASE_HOST=postgres
INTERNAL_REDIS_HOST=redis
INTERNAL_BACKEND_HOST=backend
INTERNAL_FRONTEND_HOST=frontend

# ==============================================
# SSL/TLS CONFIGURATION
# ==============================================
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/private.key
SSL_DHPARAM_PATH=/etc/nginx/ssl/dhparam.pem
ENABLE_SSL=true
FORCE_HTTPS=true

# ==============================================
# SECURITY CONFIGURATION
# ==============================================
# CORS Settings
ALLOWED_ORIGINS=https://your-domain.com,https://www.your-domain.com,https://155.138.239.131
ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS,PATCH
ALLOWED_HEADERS=Accept,Accept-Language,Content-Language,Content-Type,Authorization,X-Requested-With

# Rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS=1000
RATE_LIMIT_WINDOW=3600

# Security headers
ENABLE_SECURITY_HEADERS=true
ENABLE_HSTS=true
HSTS_MAX_AGE=31536000

# ==============================================
# PERFORMANCE CONFIGURATION - PRODUCTION
# ==============================================
# Backend workers and performance
UVICORN_WORKERS=4
UVICORN_WORKER_TIMEOUT=300
UVICORN_MAX_REQUESTS=10000
UVICORN_MAX_REQUESTS_JITTER=1000

# Database performance
POSTGRES_SHARED_BUFFERS=512MB
POSTGRES_EFFECTIVE_CACHE_SIZE=1536MB
POSTGRES_WORK_MEM=8MB

# Redis performance
REDIS_MAXMEMORY=1gb
REDIS_MAXMEMORY_POLICY=allkeys-lru

# Nginx performance
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=1024
NGINX_CLIENT_MAX_BODY_SIZE=100m
NGINX_PROXY_CONNECT_TIMEOUT=60
NGINX_PROXY_SEND_TIMEOUT=60
NGINX_PROXY_READ_TIMEOUT=60

# ==============================================
# LOGGING AND MONITORING
# ==============================================
LOG_LEVEL=WARNING
ENABLE_METRICS=true
HEALTH_CHECK_INTERVAL=15
LOG_RETENTION_DAYS=30

# Monitoring endpoints
PROMETHEUS_ENABLED=true
GRAFANA_ENABLED=true
LOKI_ENABLED=true

# Log levels per service
POSTGRES_LOG_LEVEL=WARNING
REDIS_LOG_LEVEL=WARNING
BACKEND_LOG_LEVEL=WARNING
FRONTEND_LOG_LEVEL=ERROR
NGINX_LOG_LEVEL=WARN

# ==============================================
# BACKUP CONFIGURATION
# ==============================================
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM UTC
BACKUP_RETENTION_DAYS=7
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_S3_REGION=us-east-1

# ==============================================
# DOCKER ORCHESTRATION
# ==============================================
# Service dependencies
WAIT_HOSTS=postgres:5432,redis:6379
WAIT_HOSTS_TIMEOUT=300
WAIT_SLEEP_INTERVAL=5
WAIT_HOST_CONNECT_TIMEOUT=30

# Docker resource limits
POSTGRES_MEMORY_LIMIT=2g
POSTGRES_CPU_LIMIT=2.0
REDIS_MEMORY_LIMIT=1g
REDIS_CPU_LIMIT=1.0
BACKEND_MEMORY_LIMIT=3g
BACKEND_CPU_LIMIT=3.0
FRONTEND_MEMORY_LIMIT=512m
FRONTEND_CPU_LIMIT=1.0

# ==============================================
# DEVELOPMENT/DEBUG OVERRIDES (PRODUCTION = FALSE)
# ==============================================
REACT_DEBUG=false
REACT_LOG_LEVEL=error
NODE_ENV=production
GENERATE_SOURCEMAP=false
NODE_OPTIONS=--max_old_space_size=4096
CI=true
DOCKER=true

# ==============================================
# VULTR-SPECIFIC CONFIGURATION
# ==============================================
# Vultr server specifications
VULTR_INSTANCE_ID=your-instance-id
VULTR_REGION=ewr  # New Jersey
VULTR_PLAN=vc2-2c-4gb  # Update based on your actual plan

# Network configuration
VULTR_PRIVATE_NETWORK_ENABLED=false
VULTR_IPV6_ENABLED=true
VULTR_BACKUPS_ENABLED=true

# ==============================================
# MAINTENANCE AND UPDATES
# ==============================================
MAINTENANCE_MODE=false
UPDATE_CHECK_ENABLED=true
AUTO_UPDATE_ENABLED=false

# Health check URLs
HEALTH_CHECK_URL=https://your-domain.com/health
API_HEALTH_CHECK_URL=https://your-domain.com/api/health
FRONTEND_HEALTH_CHECK_URL=https://your-domain.com

# ==============================================
# THIRD-PARTY INTEGRATIONS
# ==============================================
# Email notifications (for SSL renewal, alerts, etc.)
SMTP_HOST=smtp.your-email-provider.com
SMTP_PORT=587
SMTP_USER=notifications@your-domain.com
SMTP_PASSWORD=your-smtp-password
SMTP_TLS=true

# Alerting
ALERT_EMAIL=admin@your-domain.com
SLACK_WEBHOOK_URL=https://hooks.slack.com/your/webhook/url

# ==============================================
# TROUBLESHOOTING AND DEBUG
# ==============================================
# Set to true only for troubleshooting
DEBUG_MODE=false
VERBOSE_LOGGING=false
ENABLE_PROFILING=false

# Container debugging
CONTAINER_DEBUG=false
DOCKER_BUILDKIT=1

# ==============================================
# ENVIRONMENT VALIDATION
# ==============================================
# These help validate the environment is properly configured
ENVIRONMENT_VALIDATED=false
SSL_CONFIGURED=false
FIREWALL_CONFIGURED=false
MONITORING_CONFIGURED=false

# ==============================================
# PRODUCTION CHECKLIST REMINDERS
# ==============================================
# TODO: Update DOMAIN_NAME and SSL_EMAIL
# TODO: Generate secure passwords for all services
# TODO: Configure firewall rules (see firewall-setup.sh)
# TODO: Set up SSL certificates (see ssl-setup.sh)
# TODO: Configure DNS records
# TODO: Test external access
# TODO: Set up monitoring alerts
# TODO: Configure backup strategy
# TODO: Review security headers and CORS settings
# TODO: Set up log rotation and monitoring