# DEFINITIVE DOCKER COMPOSE CONFIGURATION FOR SQLITE
# This configuration solves the root cause of SQLite database access issues in Docker
# Fixed Issues:
# 1. Proper volume mounting with correct permissions
# 2. Database initialization and validation
# 3. Container user permissions alignment
# 4. Startup sequence optimization

services:
  # Redis for caching (keep this for websockets and session management)
  redis:
    image: redis:7-alpine
    container_name: ai_validation_redis_sqlite
    hostname: redis
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data_sqlite:/data
    networks:
      - vru_validation_sqlite_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-secure_redis_password} --appendonly yes

  # FastAPI Backend with FIXED SQLite Configuration
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: ai_validation_backend_sqlite
    hostname: backend
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      # Database Configuration - FIXED PATHS
      - AIVALIDATION_DATABASE_URL=sqlite:///./dev_database.db
      - DATABASE_URL=sqlite:///./dev_database.db
      # Redis Configuration  
      - AIVALIDATION_REDIS_URL=redis://:${REDIS_PASSWORD:-secure_redis_password}@redis:6379
      - REDIS_URL=redis://:${REDIS_PASSWORD:-secure_redis_password}@redis:6379
      # API Configuration
      - AIVALIDATION_API_PORT=8000
      - AIVALIDATION_API_HOST=0.0.0.0
      - AIVALIDATION_APP_ENVIRONMENT=${APP_ENV:-development}
      - AIVALIDATION_SECRET_KEY=${AIVALIDATION_SECRET_KEY:-GENERATE_SECURE_KEY_FOR_PRODUCTION}
      # CORS Configuration
      - AIVALIDATION_CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://155.138.239.131:3000
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://155.138.239.131:3000
      # Docker Configuration
      - AIVALIDATION_DOCKER_MODE=true
      - AIVALIDATION_DATABASE_ECHO=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - vru_validation_sqlite_network
    volumes:
      # FIXED: Proper database mounting with correct permissions
      - type: bind
        source: ./backend/dev_database.db
        target: /app/dev_database.db
        bind:
          create_host_path: true
      # Mount entire backend directory for code access  
      - type: bind
        source: ./backend
        target: /app
        bind:
          create_host_path: false
      # Mount models directory
      - type: bind
        source: ./models
        target: /app/models
        bind:
          create_host_path: true
      # Upload directory with proper permissions
      - uploaded_videos_sqlite:/app/uploads
    # USER PERMISSIONS FIX: Run as user that matches host permissions
    user: "1000:1000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    restart: unless-stopped
    # FIXED STARTUP COMMAND: Initialize database properly before starting server
    command: [
      "sh", "-c", 
      "set -e && \
       echo 'üîß SQLite Docker Container Starting...' && \
       echo 'Container User: '$(id) && \
       echo 'Working Directory: '$(pwd) && \
       ls -la /app/ | head -10 && \
       echo 'üìÅ Database File Check:' && \
       ls -la /app/dev_database.db || echo 'Database file not found, will create' && \
       /app/scripts/docker-database-init.sh && \
       echo 'üöÄ Starting application server...' && \
       uvicorn main:socketio_app --host 0.0.0.0 --port 8000 --reload --log-level info"
    ]

  # React Frontend  
  frontend:
    build: ./frontend
    container_name: ai_validation_frontend_sqlite
    hostname: frontend
    ports:
      - "0.0.0.0:3000:3000"
    environment:
      - REACT_APP_API_URL=http://155.138.239.131:8000
      - REACT_APP_WS_URL=ws://155.138.239.131:8000
      - REACT_APP_SOCKETIO_URL=http://155.138.239.131:8001
      - REACT_APP_VIDEO_BASE_URL=http://155.138.239.131:8000
      - REACT_APP_ENVIRONMENT=${APP_ENV:-development}
      - REACT_APP_DEBUG=${REACT_DEBUG:-false}
      - NODE_ENV=${NODE_ENV:-development}
      - GENERATE_SOURCEMAP=${GENERATE_SOURCEMAP:-false}
      - CI=true
      - DOCKER=true
      - NODE_OPTIONS=--max_old_space_size=4096
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - vru_validation_sqlite_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

volumes:
  redis_data_sqlite:
    driver: local
  uploaded_videos_sqlite:
    driver: local

networks:
  vru_validation_sqlite_network:
    driver: bridge
    name: vru_validation_sqlite_network
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16
          gateway: 172.21.0.1