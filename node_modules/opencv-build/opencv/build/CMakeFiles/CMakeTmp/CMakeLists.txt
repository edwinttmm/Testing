cmake_minimum_required(VERSION 3.28.3.0)
cmake_policy(SET CMP0126 OLD)
cmake_policy(SET CMP0128 OLD)
project(CMAKE_TRY_COMPILE C)
set(CMAKE_VERBOSE_MAKEFILE 1)
set(CMAKE_C_FLAGS "")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${COMPILE_DEFINITIONS}")
set(CMAKE_EXE_LINKER_FLAGS "")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${EXE_LINKER_FLAGS}")
include_directories(${INCLUDE_DIRECTORIES})
set(CMAKE_SUPPRESS_REGENERATION 1)
link_directories(${LINK_DIRECTORIES})
add_definitions([==[ -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-delete-non-virtual-dtor -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long  -pthread]==])
cmake_policy(SET CMP0065 OLD)
cmake_policy(SET CMP0083 OLD)
cmake_policy(SET CMP0155 OLD)
include("${CMAKE_ROOT}/Modules/Internal/HeaderpadWorkaround.cmake")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "/workspaces/Testing/node_modules/opencv-build/opencv/build/CMakeFiles/CMakeTmp")
add_executable(cmTC_f77a6)
target_sources(cmTC_f77a6 PRIVATE
  "/workspaces/Testing/node_modules/opencv-build/opencv/build/CMakeFiles/CMakeTmp/src.c"
)
file(GENERATE OUTPUT "${CMAKE_BINARY_DIR}/cmTC_f77a6_loc"
     CONTENT $<TARGET_FILE:cmTC_f77a6>)
target_link_libraries(cmTC_f77a6 ${LINK_LIBRARIES})
