# Modern Ubuntu 22.04 Dockerfile - OpenGL Solution
# Production-ready with modern OpenGL packages
FROM ubuntu:22.04

# Prevent interactive prompts during build
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHON_VERSION=3.11

WORKDIR /app

# Install Python and modern OpenGL packages
RUN apt-get update && apt-get install -y \
    # Python installation
    python${PYTHON_VERSION} \
    python${PYTHON_VERSION}-dev \
    python${PYTHON_VERSION}-venv \
    python3-pip \
    # Modern OpenGL stack (libgl1-mesa-glx replacement)
    libgl1-mesa-dri \
    libegl1-mesa \
    libgles2-mesa \
    libglx-mesa0 \
    mesa-utils \
    # Graphics and windowing libraries
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender1 \
    libxrandr2 \
    libxss1 \
    libxcursor1 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxi6 \
    libxtst6 \
    libxinerama1 \
    # Additional utilities
    libgomp1 \
    libfontconfig1 \
    libfreetype6 \
    ca-certificates \
    curl \
    # Cleanup
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y

# Create symbolic links for python
RUN ln -sf /usr/bin/python${PYTHON_VERSION} /usr/bin/python \
    && ln -sf /usr/bin/python${PYTHON_VERSION} /usr/bin/python3

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip setuptools wheel \
    && pip install --no-cache-dir -r requirements.txt

# Copy application
COPY . .

# Security: Create non-root user
RUN groupadd -r app && useradd -r -g app -d /app -s /sbin/nologin -c "App user" app \
    && chown -R app:app /app

USER app

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

EXPOSE 8000

CMD ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]